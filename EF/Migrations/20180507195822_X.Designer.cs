// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace EF.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20180507195822_X")]
    partial class X
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rc1-32029")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleApp2.Domain.DocumentationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DocumentationType");
                });

            modelBuilder.Entity("ConsoleApp2.Domain.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("ConsoleApp2.Domain.PackageDocumentationTypeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PackageId");

                    b.Property<int?>("TypeId");

                    b.Property<DateTime>("ValidFrom");

                    b.Property<DateTime>("ValidTo");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("TypeId");

                    b.ToTable("PackageDocumentationTypeInfo");
                });

            modelBuilder.Entity("ConsoleApp2.Domain.Package", b =>
                {
                    b.OwnsOne("ConsoleApp2.Domain.PackageNumber", "Number", b1 =>
                        {
                            b1.Property<int?>("PackageId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Value");

                            b1.ToTable("Packages");

                            b1.HasOne("ConsoleApp2.Domain.Package")
                                .WithOne("Number")
                                .HasForeignKey("ConsoleApp2.Domain.PackageNumber", "PackageId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("ConsoleApp2.Domain.PackageStatus", "Status", b1 =>
                        {
                            b1.Property<int?>("PackageId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Value");

                            b1.ToTable("Packages");

                            b1.HasOne("ConsoleApp2.Domain.Package")
                                .WithOne("Status")
                                .HasForeignKey("ConsoleApp2.Domain.PackageStatus", "PackageId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("ConsoleApp2.Domain.PackageDocumentationTypeInfo", b =>
                {
                    b.HasOne("ConsoleApp2.Domain.Package")
                        .WithMany("DocumentationTypeInfos")
                        .HasForeignKey("PackageId");

                    b.HasOne("ConsoleApp2.Domain.DocumentationType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
